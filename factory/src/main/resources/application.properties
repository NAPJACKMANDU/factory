spring.application.name=factory

#Tomcat port localhost:8095
server.port=8095

#View-Resolver (prefix, suffix)
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

spring.websocket.max-message-size=104857600  # 10MB

spring.websocket.sockjs.enabled=true  # SockJS Ã¬ÂÂ¬Ã¬ÂÂ© Ã¬ÂÂ Ã¬ÂÂ°ÃªÂ²Â° Ã¬ÂÂÃ¬Â ÂÃ¬ÂÂ± Ã¬Â¦ÂÃªÂ°Â

# DB Connection
spring.datasource.dbcp2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://project-db-campus.smhrd.com:3312/seocho_DCX_DB_p3_3
spring.datasource.username=seocho_DCX_DB_p3_3
spring.datasource.password=smhrd3

video.storage.path=C:/Users/smhrd1/Desktop/Spring/factory/factory/src/main/resources/static/videos
#C:/Users/smhrd/Desktop/Spring/factory/factory/src/main/resources/static/videos 
#C:/Users/user/OneDrive/Desktop/spring/factory/factory/src/main/resources/static/videos

#C:/Users/smhrd1/Desktop/Spring/factory/factory/src/main/resources/static/videos

# application.properties
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
server.tomcat.max-swallow-size=100MB

#JPA
#JPA
#ddl-auto : create (서버가 시작되면 무조건 테이블을 drop하고 다시 생성
#update : 테이블의 변셩사항이 있을 경우에만 update해줌
#none : 테이블 관련 sql 실행 X
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true